variables:
  remotehost1: 'daint.alps.cscs.ch'
  conda_init: "source /users/{cscsuser}/miniconda3/bin/activate"
  config_files: "/home/jovyan/opt/aiidalab-alps-files/"
  qe_uenv: "quantumespresso/v7.4:v2"
  qe_version: "7.4"
  cp2k_uenv: "cp2k/2024.3:v2"
  cp2k_version: "2024.3"
  spm_uenv: "cp2k-spm-tools/1.5.0:1658742098"
  spm_version: "1.5.0"
  afm_uenv: "ppafm/0.4.0:1829383183"
  afm_version: "0.4.0"
  cubehandler_uenv: "cubehandler/0.1.0:1771514270"
  cubehandler_version: "0.1.0"
  python_uenv: "critic2/1.2:1952527021"
  python_version: "3.9.13"
  phonopy_uenv: "critic2/1.2:1952527021"
  phonopy_version: "2.25.0"
  critic2_uenv: "critic2/1.2:1952527021"
  critic2_version: "1.2.2"
  ssh_public_key: "/home/jovyan/.ssh/cscs-key-cert.pub"
  timestamp: "now"
  # bashrc to enable conda
  bashrc: |
    # Sample .bashrc for SuSE Linux now
    # Copyright (c) SuSE GmbH Nuernberg

    # There are 3 different types of shells in bash: the login shell, normal shell
    # and interactive shell. Login shells read ~/.profile and interactive shells
    # read ~/.bashrc; in our setup, /etc/profile sources ~/.bashrc - thus all
    # settings made here will also take effect in a login shell.
    #
    # NOTE: It is recommended to make language settings in ~/.profile rather than
    # here, since multilingual X sessions would not work properly if LANG is over-
    # ridden in every subshell.

    # Some applications read the EDITOR variable to determine your favourite text
    # editor. So uncomment the line below and enter the editor of your choice :-)
    #export EDITOR=/usr/bin/vim
    #export EDITOR=/usr/bin/mcedit

    # For some news readers it makes sense to specify the NEWSSERVER variable here
    #export NEWSSERVER=your.news.server

    # If you want to use a Palm device with Linux, uncomment the two lines below.
    # For some (older) Palm Pilots, you might need to set a lower baud rate
    # e.g. 57600 or 38400; lowest is 9600 (very slow!)
    #
    #export PILOTPORT=/dev/pilot
    #export PILOTRATE=115200

    test -s ~/.alias && . ~/.alias || true

widgets:
  cscsuser:
    - "select"
    - "adroux"
    - "ajayaraj"
    - "akinikar"
    - "aortega"
    - "atreglia"
    - "cbotta"
    - "cpi"
    - "croncagl"
    - "ddutta"
    - "dpassero"
    - "eammerma"
    - "fdacosta"
    - "fxiang"
    - "jhwang"
    - "joverarr"
    - "jwright"
    - "lbobzien"
    - "ldominik"
    - "lhuberic"
    - "llieske"
    - "lxuanche"
    - "mdigiova"
    - "mfinger"
    - "nbassi"
    - "nkrane"
    - "ramador"
    - "sbrovell"
    - "sravuri"
    - "ssuyash"
    - "wgao"
    - "wxu"
    - "yaa"
  grant:
    - "select"
    - "free"
    - "lp83"
    - "lp86"
  
computers:
  tigu:
    grants:
      - "free"
    setup:
      append_text: ''
      default_memory_per_machine: 125829120
      description: Tigu computer at Empa.
      hostname: 10.128.1.11
      label: tigu_{grant}
      mpiprocs_per_machine: 12
      mpirun_command: srun
      prepend_text: |
          export OMP_NUM_THREADS=${SLURM_CPUS_PER_TASK:-1}
          ulimit -s unlimited
      scheduler: core.slurm
      shebang: '#!/bin/bash -l'
      transport: core.ssh
      use_double_quotes: false
      work_dir: /scratch/{username}/aiida/    
    config:
      allow_agent: true
      compress: true
      gss_auth: false
      gss_deleg_creds: false
      gss_host: 10.128.1.11
      gss_kex: false
      key_filename: /home/jovyan/.ssh/cscs-key
      key_policy: RejectPolicy
      load_system_host_keys: true
      look_for_keys: true
      port: 22
      proxy_command: ssh -W 10.128.1.11:22 -oProxyCommand="ssh -o 'ForwardAgent yes' ela.cscs.ch 'ssh-add -t 5 && nc jump1.empa.ch 22'" cpi@jump1.empa.ch
      proxy_jump: ''
      safe_interval: 30.0
      timeout: 60
      use_login_shell: true
      username: "{cscsuser}"
  daint.alps:
    grants:
      - "lp83"
      - "lp86"
    setup:
      description: daint.alps at CSCS
      hostname: daint.alps.cscs.ch
      label: daint.alps_{grant}
      mpiprocs_per_machine: 256
      mpirun_command: srun --cpu-bind=socket /users/{cscsuser}/bin/mps-wrapper.sh
      prepend_text: |
        #SBATCH --ntasks-per-core=1
        #SBATCH --hint=nomultithread
        #SBATCH --no-requeue
        #SBATCH --account={grant}
      scheduler: core.slurm
      shebang: "#!/bin/bash -l"
      transport: core.ssh
      use_double_quotes: false
      work_dir: "/capstor/scratch/cscs/{username}/aiida/"
      default_memory_per_machine: 268435456
    config:
      allow_agent: true
      compress: true
      gss_auth: false
      gss_deleg_creds: false
      gss_host: daint.alps.cscs.ch
      gss_kex: false
      key_filename: /home/jovyan/.ssh/cscs-key
      key_policy: RejectPolicy
      load_system_host_keys: true
      look_for_keys: true
      port: 22
      proxy_command: ''
      proxy_jump: ela.cscs.ch
      safe_interval: 30.0
      timeout: 60
      use_login_shell: true
      username: "{cscsuser}"

# SSH Configuration from 'config' File
ssh_config: 
  daint.alps.cscs.ch:
    hostname: daint.alps.cscs.ch
    user: "{cscsuser}"
    port: 22
    proxy_jump: ela.cscs.ch
    identity_file: /home/jovyan/.ssh/cscs-key
    server_alive_interval: 5
  ela.cscs.ch:
    hostname: ela.cscs.ch
    user: "{cscsuser}"
    port: 22
    identity_file: /home/jovyan/.ssh/cscs-key
  tigu:
    hostname: 10.128.1.11
    user: "{cscsuser}"
    port: 22
    proxy_command: ssh -W 10.128.1.11:22 -oProxyCommand="ssh -o 'ForwardAgent yes' ela.cscs.ch 'ssh-add -t 5 && nc jump1.empa.ch 22'" {cscsuser}@jump1.empa.ch  
    identity_file: /home/jovyan/.ssh/cscs-key
    server_alive_interval: 5
      

# Computational Tools
codes:
  gaussian:
    append_text: ' '
    computer: tigu
    default_calc_job_plugin: gaussian
    description: "Gaussian 16"
    filepath_executable: "/opt/g16_avx2/g16"
    label: gaussian-16
    prepend_text: " "
    use_double_quotes: false
  stm:
    append_text: ' '
    computer: daint.alps
    default_calc_job_plugin: nanotech_empa.stm
    description: "stm {spm_uenv} on daint.alps from https://github.com/nanotech-empa/cp2k-spm-tools.git"
    filepath_executable: "/user-environment/env/default/bin/cp2k-stm-sts-wfn"
    label: stm-{spm_version}
    prepend_text: |
      #SBATCH --uenv={spm_uenv}
      #SBATCH --view=default
      # set environment
      export MPICH_MALLOC_FALLBACK=1
      export OMP_NUM_THREADS=$((SLURM_CPUS_PER_TASK - 1))
      export MPICH_GPU_SUPPORT_ENABLED=0
      ulimit -s unlimited
    use_double_quotes: false
  ppafm:
    append_text: ' '
    computer: daint.alps
    default_calc_job_plugin: nanotech_empa.afm
    description: "afm {afm_uenv} on daint.alps from https://github.com/Probe-Particle/ppafm.git"
    filepath_executable: "/users/{cscsuser}/bin/run_ppafm.sh"
    label: ppafm-{afm_version}  
    prepend_text: |
      #SBATCH --uenv={afm_uenv}
      #SBATCH --view=default
      export MPICH_GPU_SUPPORT_ENABLED=0
      ulimit -s unlimited
    use_double_quotes: false

  python:
    append_text: ' '
    computer: daint.alps
    default_calc_job_plugin: pythonjob.pythonjob
    description: "python {python_uenv} at daint alps"
    filepath_executable: "/user-environment/env/default/bin/python"
    label: python-{python_version}
    prepend_text: |
      #SBATCH --uenv={python_uenv}
      #SBATCH --view=default
      export MPICH_GPU_SUPPORT_ENABLED=0
    use_double_quotes: false

  cubehandler:
    append_text: ' '
    computer: daint.alps
    default_calc_job_plugin: core.shell
    description: "cubehandler {cubehandler_uenv} at daint alps"
    filepath_executable: "/user-environment/env/default/bin/cubehandler"
    label: cubehandler-{cubehandler_version}
    prepend_text: |
      #SBATCH --uenv={cubehandler_uenv}
      #SBATCH --view=default
      export MPICH_GPU_SUPPORT_ENABLED=0
    use_double_quotes: false

  phonopy:
    append_text: ' '
    computer: daint.alps
    default_calc_job_plugin: phonopy.phonopy
    description: "phonopy {phonopy_uenv} at daint alps"
    filepath_executable: "/user-environment/env/default/bin/phonopy"
    label: phonopy-{phonopy_version}
    prepend_text: |
      #SBATCH --uenv={phonopy_uenv}
      #SBATCH --view=default
      export MPICH_MALLOC_FALLBACK=1
      export OMP_NUM_THREADS=$((SLURM_CPUS_PER_TASK - 1))
      export MPICH_GPU_SUPPORT_ENABLED=0
      ulimit -s unlimited
    use_double_quotes: false

  critic2:
    append_text: ' '
    computer: daint.alps
    default_calc_job_plugin: critic2
    description: "critic2 {critic2_uenv} on daint.alps"
    filepath_executable: "/user-environment/env/default/bin/critic2"
    label: critic2-{critic2_version}
    prepend_text: |
      #SBATCH --uenv={critic2_uenv}
      #SBATCH --view=default
      export MPICH_GPU_SUPPORT_ENABLED=0
    use_double_quotes: false

  pw:
    append_text: ' '
    computer: daint.alps
    default_calc_job_plugin: quantumespresso.pw
    description: "pw.x {qe_uenv}"
    filepath_executable: "/user-environment/env/default/bin/pw.x"
    label: pw-{qe_version}
    prepend_text: |
      #SBATCH --uenv={qe_uenv}
      # set environment
      export MPICH_GPU_SUPPORT_ENABLED=1
      export MPICH_SMP_SINGLE_COPY_MODE=xpmem
      export MPICH_MALLOC_FALLBACK=1
      export OMP_NUM_THREADS=$((SLURM_CPUS_PER_TASK - 1))
      export OMP_PLACES=threads
      ulimit -s unlimited
    use_double_quotes: false

  pp:
    append_text: ' '
    computer: daint.alps
    default_calc_job_plugin: quantumespresso.pp
    description: "pp.x {qe_uenv}"
    filepath_executable: "/user-environment/env/default/bin/pp.x"
    label: pp-{qe_version}
    prepend_text: |
      #SBATCH --uenv={qe_uenv}
      # set environment
      export MPICH_GPU_SUPPORT_ENABLED=1
      export MPICH_SMP_SINGLE_COPY_MODE=xpmem
      export MPICH_MALLOC_FALLBACK=1
      export OMP_NUM_THREADS=$((SLURM_CPUS_PER_TASK - 1))
      export OMP_PLACES=threads
      ulimit -s unlimited
    use_double_quotes: false

  projwfc:
    append_text: ' '
    computer: daint.alps
    default_calc_job_plugin: quantumespresso.projwfc
    description: "projwfc.x {qe_uenv}"
    filepath_executable: "/user-environment/env/default/bin/projwfc.x"
    label: projwfc-{qe_version}
    prepend_text: |
      #SBATCH --uenv={qe_uenv}
      # set environment
      export MPICH_GPU_SUPPORT_ENABLED=1
      export MPICH_SMP_SINGLE_COPY_MODE=xpmem
      export MPICH_MALLOC_FALLBACK=1
      export OMP_NUM_THREADS=$((SLURM_CPUS_PER_TASK - 1))
      export OMP_PLACES=threads
      ulimit -s unlimited
    use_double_quotes: false

  dos:
    append_text: ' '
    computer: daint.alps
    default_calc_job_plugin: quantumespresso.dos
    description: "dos.x {qe_uenv}"
    filepath_executable: "/user-environment/env/default/bin/dos.x"
    label: dos-{qe_version}
    prepend_text: |
      #SBATCH --uenv={qe_uenv}
      # set environment
      export MPICH_GPU_SUPPORT_ENABLED=1
      export MPICH_SMP_SINGLE_COPY_MODE=xpmem
      export MPICH_MALLOC_FALLBACK=1
      export OMP_NUM_THREADS=$((SLURM_CPUS_PER_TASK - 1))
      export OMP_PLACES=threads
      ulimit -s unlimited
    use_double_quotes: false

  overlap:
    append_text: ' '
    computer: daint.alps
    default_calc_job_plugin: nanotech_empa.overlap
    description: "overlap {spm_uenv} on daint.alps from https://github.com/nanotech-empa/cp2k-spm-tools.git"
    filepath_executable: "/user-environment/env/default/bin/cp2k-overlap-from-wfns"
    label: overlap-{spm_version}
    prepend_text: |
      #SBATCH --uenv={spm_uenv}
      #SBATCH --view=default
      # set environment
      export MPICH_MALLOC_FALLBACK=1
      export OMP_NUM_THREADS=$((SLURM_CPUS_PER_TASK - 1))
      export MPICH_GPU_SUPPORT_ENABLED=0
      ulimit -s unlimited
    use_double_quotes: false

  cp2k:
    append_text: ' '
    computer: daint.alps
    default_calc_job_plugin: cp2k
    description: "cp2k {cp2k_uenv} on daint.alps"
    filepath_executable: "/user-environment/env/cp2k/bin/cp2k.psmp"
    label: cp2k-{cp2k_version}
    prepend_text: |
      #SBATCH --uenv={cp2k_uenv}
      #SBATCH --view=cp2k
      # set environment
      export CP2K_DATA_DIR=/users/{cscsuser}/src/cp2k/data
      export CUDA_CACHE_PATH="/dev/shm/$RANDOM"
      export MPICH_GPU_SUPPORT_ENABLED=1
      export MPICH_MALLOC_FALLBACK=1
      export OMP_NUM_THREADS=$((SLURM_CPUS_PER_TASK - 1))
      ulimit -s unlimited
    use_double_quotes: false

custom_commands:
  local_commands:
    dump_files:
      - type: local
        command: ""
  remote_commands:
    remotehost: "{remotehost1}"
    copy_files:
      - type: ssh
        command: "mkdir -p /users/{cscsuser}/bin && mkdir -p /users/{cscsuser}/src"
      - type: scp
        command: "scp {config_files}/mps-wrapper.sh {remotehost1}:/users/{cscsuser}/bin/"
      - type: scp
        command: "scp -r {config_files}/cp2k {remotehost1}:/users/{cscsuser}/src/"
      - type: scp
        command: "scp -r {config_files}/run_ppafm.sh {remotehost1}:/users/{cscsuser}/bin/"  
      - type: ssh
        command: "mv /users/{cscsuser}/.bashrc /users/{cscsuser}/.bashrc.bak_{timestamp} || true"
      - type: ssh
        command: |
          cat > /users/{cscsuser}/.bashrc <<EOF
          {bashrc}
          EOF
